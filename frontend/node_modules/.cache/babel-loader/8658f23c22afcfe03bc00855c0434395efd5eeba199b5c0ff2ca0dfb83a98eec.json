{"ast":null,"code":"import { createRouter, createWebHashHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport LoginView from \"../views/LoginView.vue\";\nimport ContactView from \"../views/ContactView.vue\";\nimport AddpostView from \"../views/AddpostView.vue\";\nimport auth from \"../auth\";\nimport APost from \"@/views/APost.vue\";\nimport OnePost from \"../views/OnePost.vue\";\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: HomeView,\n  beforeEnter: async (to, from, next) => {\n    let authResult = await auth.authenticated();\n    if (!authResult) {\n      next('/login');\n    } else {\n      next();\n    }\n  }\n}, {\n  path: '/signup',\n  name: 'signup',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"about\" */'../views/SignupView.vue')\n}, {\n  path: '/login',\n  name: 'login',\n  component: LoginView\n}, {\n  path: '/contact',\n  name: 'contact',\n  component: ContactView\n}, {\n  path: '/addpost',\n  name: 'addpost',\n  component: AddpostView,\n  beforeEnter: async (to, from, next) => {\n    let authResult = await auth.authenticated();\n    if (!authResult) {\n      next('/login');\n    } else {\n      next();\n    }\n  }\n}, {\n  path: \"/posts/:id\",\n  name: \"APost\",\n  component: OnePost,\n  props: true,\n  beforeEnter: async (to, from, next) => {\n    let authResult = await auth.authenticated();\n    if (!authResult) {\n      next('/login');\n    } else {\n      next();\n    }\n  }\n}];\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHashHistory","HomeView","LoginView","ContactView","AddpostView","auth","APost","OnePost","routes","path","name","component","beforeEnter","to","from","next","authResult","authenticated","props","router","history"],"sources":["C:/Users/ppind/Documents/3 semester/AH/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHashHistory } from 'vue-router'\r\nimport HomeView from '../views/HomeView.vue'\r\nimport LoginView from \"../views/LoginView.vue\"\r\nimport ContactView from \"../views/ContactView.vue\"\r\nimport AddpostView from \"../views/AddpostView.vue\"\r\nimport auth from \"../auth\"\r\nimport APost from \"@/views/APost.vue\";\r\nimport OnePost from \"../views/OnePost.vue\"\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'home',\r\n    component: HomeView,\r\n    beforeEnter: async(to, from, next) => {\r\n      let authResult = await auth.authenticated();\r\n      if (!authResult) {\r\n          next('/login')\r\n      } else {\r\n          next();\r\n      }\r\n  }\r\n  },\r\n  {\r\n    path: '/signup',\r\n    name: 'signup',\r\n    // route level code-splitting\r\n    // this generates a separate chunk (about.[hash].js) for this route\r\n    // which is lazy-loaded when the route is visited.\r\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/SignupView.vue')\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'login',\r\n    component: LoginView\r\n  },\r\n  {\r\n    path: '/contact',\r\n    name: 'contact',\r\n    component: ContactView\r\n  },\r\n  {\r\n    path: '/addpost',\r\n    name: 'addpost',\r\n    component: AddpostView,\r\n    beforeEnter: async(to, from, next) => {\r\n      let authResult = await auth.authenticated();\r\n      if (!authResult) {\r\n          next('/login')\r\n      } else {\r\n          next();\r\n      }\r\n  }\r\n  },\r\n  {\r\n    path: \"/posts/:id\",\r\n    name: \"APost\",\r\n    component: OnePost,\r\n    props: true,\r\n    beforeEnter: async(to, from, next) => {\r\n      let authResult = await auth.authenticated();\r\n      if (!authResult) {\r\n          next('/login')\r\n      } else {\r\n          next();\r\n      }\r\n  }\r\n  },\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHashHistory(),\r\n  routes\r\n})\r\n\r\nexport default router\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,oBAAoB,QAAQ,YAAY;AAC/D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,OAAO,MAAM,sBAAsB;AAE1C,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEV,QAAQ;EACnBW,WAAW,EAAE,MAAAA,CAAMC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;IACpC,IAAIC,UAAU,GAAG,MAAMX,IAAI,CAACY,aAAa,CAAC,CAAC;IAC3C,IAAI,CAACD,UAAU,EAAE;MACbD,IAAI,CAAC,QAAQ,CAAC;IAClB,CAAC,MAAM;MACHA,IAAI,CAAC,CAAC;IACV;EACJ;AACA,CAAC,EACD;EACEN,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACd;EACA;EACA;EACAC,SAAS,EAAEA,CAAA,KAAM,MAAM,EAAC,+BAAgC,yBAAyB;AACnF,CAAC,EACD;EACEF,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAET;AACb,CAAC,EACD;EACEO,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAER;AACb,CAAC,EACD;EACEM,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAEP,WAAW;EACtBQ,WAAW,EAAE,MAAAA,CAAMC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;IACpC,IAAIC,UAAU,GAAG,MAAMX,IAAI,CAACY,aAAa,CAAC,CAAC;IAC3C,IAAI,CAACD,UAAU,EAAE;MACbD,IAAI,CAAC,QAAQ,CAAC;IAClB,CAAC,MAAM;MACHA,IAAI,CAAC,CAAC;IACV;EACJ;AACA,CAAC,EACD;EACEN,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEJ,OAAO;EAClBW,KAAK,EAAE,IAAI;EACXN,WAAW,EAAE,MAAAA,CAAMC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;IACpC,IAAIC,UAAU,GAAG,MAAMX,IAAI,CAACY,aAAa,CAAC,CAAC;IAC3C,IAAI,CAACD,UAAU,EAAE;MACbD,IAAI,CAAC,QAAQ,CAAC;IAClB,CAAC,MAAM;MACHA,IAAI,CAAC,CAAC;IACV;EACJ;AACA,CAAC,CACF;AAED,MAAMI,MAAM,GAAGpB,YAAY,CAAC;EAC1BqB,OAAO,EAAEpB,oBAAoB,CAAC,CAAC;EAC/BQ;AACF,CAAC,CAAC;AAEF,eAAeW,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}