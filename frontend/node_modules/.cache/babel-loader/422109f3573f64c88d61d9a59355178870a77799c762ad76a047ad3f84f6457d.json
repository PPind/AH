{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"main\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Add a Post\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"form\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"title\"\n}, \"Title: \", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"body\"\n}, \"Body: \", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_HeaderXD = _resolveComponent(\"HeaderXD\");\n  const _component_FooterXD = _resolveComponent(\"FooterXD\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_HeaderXD), _createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    name: \"title\",\n    type: \"text\",\n    id: \"title\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.post.title = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.post.title]]), _hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    name: \"body\",\n    type: \"text\",\n    id: \"body\",\n    class: \"addpostinput\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.post.body = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.post.body]])]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.addPost && $options.addPost(...args)),\n    class: \"addPost\"\n  }, \"Add Post\")]), _createVNode(_component_FooterXD)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","for","_createVNode","_component_HeaderXD","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","name","type","id","required","$data","post","title","$event","_hoisted_5","body","onClick","_cache","args","$options","addPost","_component_FooterXD"],"sources":["C:\\Users\\ppind\\Documents\\3 semester\\AH\\frontend\\src\\views\\AddpostView.vue"],"sourcesContent":["<template>\r\n    <HeaderXD></HeaderXD>\r\n    <div class=\"main\">\r\n      <h3>Add a Post</h3>\r\n      <div class=\"form\">\r\n        <label for=\"title\">Title: </label>\r\n        <input name=\"title\" type=\"text\" id=\"title\" required v-model=\"post.title\" />\r\n        <label for=\"body\">Body: </label>\r\n        <input name=\"body\" type=\"text\" id=\"body\" class=\"addpostinput\" required v-model=\"post.body\" />\r\n      </div>\r\n      <button @click=\"addPost\" class=\"addPost\">Add Post</button>\r\n    </div>\r\n    <FooterXD></FooterXD>\r\n  </template>\r\n  \r\n  <script>\r\n  import HeaderXD from '@/components/Header.vue'\r\n    import FooterXD from '@/components/Footer.vue'\r\n\r\n  export default {\r\n    name: \"AboutView\",\r\n    components: { HeaderXD, FooterXD},\r\n    data() {\r\n      return {\r\n        post: {\r\n          title: \"\",\r\n          body: \"\",\r\n          urllink: \"\",\r\n        },\r\n      };\r\n    },\r\n    methods: {\r\n      addPost() {\r\n        var data = {\r\n          title: this.post.title,\r\n          body: this.post.body,\r\n          urllink: this.post.urllink,\r\n        };\r\n        // using Fetch - post method - send an HTTP post request to the specified URI with the defined body\r\n        fetch(\"http://localhost:3000/api/posts\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(data),\r\n        })\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          // redirect to /allposts view\r\n          this.$router.push(\"/\");\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          console.log(\"error\");\r\n        });\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n\r\n<style>\r\n\r\n\r\n\r\n.form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 5vh;\r\n}\r\n#addpostinput {\r\n    width: 40vw;\r\n    padding: 1%;\r\n}\r\n\r\n#addPost {\r\n    margin-right: 2%;\r\n}\r\n\r\n.lingike {\r\n    padding-bottom:5%\r\n}\r\n\r\n.ruleImg {\r\n    height: 60px;\r\n    width: auto;\r\n}\r\n</style>"],"mappings":";;EAESA,KAAK,EAAC;AAAM;gCACfC,mBAAA,CAAmB,YAAf,YAAU;;EACTD,KAAK,EAAC;AAAM;gCACfC,mBAAA,CAAkC;EAA3BC,GAAG,EAAC;AAAO,GAAC,SAAO;gCAE1BD,mBAAA,CAAgC;EAAzBC,GAAG,EAAC;AAAM,GAAC,QAAM;;;;6DAN5BC,YAAA,CAAqBC,mBAAA,GACrBH,mBAAA,CASM,OATNI,UASM,GARJC,UAAmB,EACnBL,mBAAA,CAKM,OALNM,UAKM,GAJJC,UAAkC,E,gBAClCP,mBAAA,CAA2E;IAApEQ,IAAI,EAAC,OAAO;IAACC,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,OAAO;IAACC,QAAQ,EAAR,EAAQ;+DAAUC,KAAA,CAAAC,IAAI,CAACC,KAAK,GAAAC,MAAA;iDAAVH,KAAA,CAAAC,IAAI,CAACC,KAAK,E,GACvEE,UAAgC,E,gBAChChB,mBAAA,CAA6F;IAAtFQ,IAAI,EAAC,MAAM;IAACC,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,MAAM;IAACX,KAAK,EAAC,cAAc;IAACY,QAAQ,EAAR,EAAQ;+DAAUC,KAAA,CAAAC,IAAI,CAACI,IAAI,GAAAF,MAAA;iDAATH,KAAA,CAAAC,IAAI,CAACI,IAAI,E,KAE3FjB,mBAAA,CAA0D;IAAjDkB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;IAAErB,KAAK,EAAC;KAAU,UAAQ,E,GAEnDG,YAAA,CAAqBqB,mBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}