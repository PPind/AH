{"ast":null,"code":"// @ is an alias to /sr\nimport Post from '@/components/Post.vue';\nimport AsideXD from '@/components/Aside.vue';\nimport HeaderXD from '@/components/Header.vue';\nimport FooterXD from '@/components/Footer.vue';\nimport auth from \"../auth\";\nexport default {\n  name: \"HomeView\",\n  components: {\n    Post,\n    AsideXD,\n    HeaderXD,\n    FooterXD\n  },\n  data: function () {\n    return {\n      authResult: auth.authenticated()\n    };\n  },\n  methods: {\n    ResetDislikes: function () {\n      this.$store.dispatch(\"ResetAct\");\n    },\n    deleteAllPosts: function () {\n      fetch(\"http://localhost:3000/api/posts\", {\n        method: \"DELETE\",\n        credentials: \"include\"\n      }).then(() => window.location.reload());\n    },\n    redirectToAddPost() {\n      // Redirect logic to a new page (replace '/new-page' with your desired route)\n      this.$router.push('/addpost');\n    },\n    Logout() {\n      fetch(\"http://localhost:3000/auth/logout\", {\n        credentials: 'include' //  Don't forget to specify this if you need cookies\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        console.log('jwt removed');\n        //console.log('jwt removed:' + auth.authenticated());\n        this.$router.push(\"/login\");\n        //location.assign(\"/\");\n      }).catch(e => {\n        console.log(e);\n        console.log(\"error logout\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["Post","AsideXD","HeaderXD","FooterXD","auth","name","components","data","authResult","authenticated","methods","ResetDislikes","$store","dispatch","deleteAllPosts","fetch","method","credentials","then","window","location","reload","redirectToAddPost","$router","push","Logout","response","json","console","log","catch","e"],"sources":["C:\\Users\\karlk\\Documents\\2023Sygis\\WAD\\AH\\frontend\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\r\n  <header-x-d></header-x-d>\r\n  <div class=\"home\">\r\n\r\n    <aside-x-d class = \"aside1\"></aside-x-d>\r\n\r\n    <div class=\"main\">\r\n      <button v-if = \"authResult\" @click=\"Logout\">Logout</button>\r\n      <post></post>\r\n      <div class=\"nupud\">\r\n        <button v-on:click=\"deleteAllPosts \"> Delete All </button>\r\n        <button @click='this.$router.push(\"/addpost\")'>Add post</button>\r\n      \r\n      </div>\r\n    </div>\r\n    \r\n    \r\n    <aside-x-d class = \"aside2\"></aside-x-d>\r\n\r\n  </div>\r\n  <footer-x-d></footer-x-d>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /sr\r\nimport Post from '@/components/Post.vue'\r\nimport AsideXD from '@/components/Aside.vue'\r\nimport HeaderXD from '@/components/Header.vue'\r\nimport FooterXD from '@/components/Footer.vue'\r\nimport auth from \"../auth\";\r\n\r\nexport default {\r\n  name: \"HomeView\",\r\n  components: {Post, AsideXD, HeaderXD, FooterXD},\r\n  data: function() {\r\n\r\n    return {\r\n      authResult: auth.authenticated()\r\n    }},\r\n  methods: {\r\n  ResetDislikes: function() {\r\n      this.$store.dispatch(\"ResetAct\")}\r\n  ,\r\n  deleteAllPosts: function(){\r\n          fetch(\"http://localhost:3000/api/posts\",{\r\n            method:\"DELETE\",\r\n            credentials:\"include\"\r\n          }).then(()=> window.location.reload())\r\n        }\r\n        ,\r\n  redirectToAddPost() {\r\n      // Redirect logic to a new page (replace '/new-page' with your desired route)\r\n      this.$router.push('/addpost');\r\n    },\r\n  Logout() {\r\n        fetch(\"http://localhost:3000/auth/logout\", {\r\n            credentials: 'include', //  Don't forget to specify this if you need cookies\r\n        })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          console.log('jwt removed');\r\n          //console.log('jwt removed:' + auth.authenticated());\r\n          this.$router.push(\"/login\");\r\n          //location.assign(\"/\");\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          console.log(\"error logout\");\r\n        });\r\n      },\r\n    }\r\n  }\r\n\r\n</script>\r\n\r\n<style>\r\n.main {\r\n    background-color: rgb(255, 217, 252);\r\n    margin: 10px auto;\r\n    padding: 1.5% 1.5%;\r\n    min-width: 350px;\r\n    max-width: 60%;\r\n    border-radius: 15px;\r\n    flex-direction: row;\r\n    display: block;\r\n    flex: 1;\r\n}\r\n\r\n.home {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n@media (max-width: 800px) {\r\n    .aside1, .aside2 {\r\n        display: none;\r\n    }\r\n}\r\n\r\n.aside1, .aside2 {\r\n    background: rgb(255, 217, 252);\r\n    flex-basis: calc((100% - 960px) / 2);\r\n    padding: 20px;\r\n    max-width: 200px;\r\n    overflow: hidden;\r\n    border-radius: 15px;\r\n}\r\n\r\n\r\n.nupud {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n</style>\r\n"],"mappings":"AAwBA;AACA,OAAOA,IAAG,MAAO,uBAAsB;AACvC,OAAOC,OAAM,MAAO,wBAAuB;AAC3C,OAAOC,QAAO,MAAO,yBAAwB;AAC7C,OAAOC,QAAO,MAAO,yBAAwB;AAC7C,OAAOC,IAAG,MAAO,SAAS;AAE1B,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IAACN,IAAI;IAAEC,OAAO;IAAEC,QAAQ;IAAEC;EAAQ,CAAC;EAC/CI,IAAI,EAAE,SAAAA,CAAA,EAAW;IAEf,OAAO;MACLC,UAAU,EAAEJ,IAAI,CAACK,aAAa,CAAC;IACjC,CAAC;EAAA,CAAC;EACJC,OAAO,EAAE;IACTC,aAAa,EAAE,SAAAA,CAAA,EAAW;MACtB,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,UAAU,CAAC;IAAA;IAEpCC,cAAc,EAAE,SAAAA,CAAA,EAAU;MAClBC,KAAK,CAAC,iCAAiC,EAAC;QACtCC,MAAM,EAAC,QAAQ;QACfC,WAAW,EAAC;MACd,CAAC,CAAC,CAACC,IAAI,CAAC,MAAKC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IACvC;IAENC,iBAAiBA,CAAA,EAAG;MAChB;MACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;IAC/B,CAAC;IACHC,MAAMA,CAAA,EAAG;MACHV,KAAK,CAAC,mCAAmC,EAAE;QACvCE,WAAW,EAAE,SAAS,CAAE;MAC5B,CAAC,EACAC,IAAI,CAAEQ,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAClCT,IAAI,CAAEX,IAAI,IAAK;QACdqB,OAAO,CAACC,GAAG,CAACtB,IAAI,CAAC;QACjBqB,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC1B;QACA,IAAI,CAACN,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;QAC3B;MACF,CAAC,EACAM,KAAK,CAAEC,CAAC,IAAK;QACZH,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;QACdH,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC7B,CAAC,CAAC;IACJ;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}