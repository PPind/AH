{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"postComp\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"pinned\"\n};\nconst _hoisted_3 = {\n  class: \"postHeader\"\n};\nconst _hoisted_4 = {\n  class: \"date\"\n};\nconst _hoisted_5 = {\n  class: \"postContent\"\n};\nconst _hoisted_6 = {\n  class: \"title\"\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  class: \"nupud\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.sortedPosts, post => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"post\",\n      key: _ctx.id\n    }, [post.isPinned ? (_openBlock(), _createElementBlock(\"h2\", _hoisted_2, \"PINNED:\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"p\", _hoisted_4, _toDisplayString(post.transformedDate), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_router_link, {\n      to: {\n        name: 'APost',\n        params: {\n          id: post.id\n        }\n      }\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"h1\", _hoisted_6, _toDisplayString(post.title), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), _createElementVNode(\"img\", {\n      class: \"postImage\",\n      src: post.postImage\n    }, null, 8 /* PROPS */, _hoisted_7), _createElementVNode(\"p\", null, _toDisplayString(post.body), 1 /* TEXT */)]), _createCommentVNode(\"\\r\\n            <div class = \\\"postDislikes\\\">\\r\\n                <img class = \\\"dislikesImg\\\" v-on:click=\\\"Increase(post.id)\\\" src=\\\"../assets/dislike.png\\\"/>\\r\\n                <p class = \\\"postDislikesP\\\">{{ post.dislikes }}</p>\\r\\n            </div>\\r\\n        \")]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.updatePost && $options.updatePost(...args)),\n    class: \"updatePost\"\n  }, \"Update Post\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.deletePost && $options.deletePost(...args)),\n    class: \"deletePost\"\n  }, \"Delete Post\")])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_1","_createElementBlock","_Fragment","_renderList","_ctx","sortedPosts","post","key","id","isPinned","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","transformedDate","_hoisted_5","_createVNode","_component_router_link","to","name","params","_hoisted_6","title","src","postImage","body","_createCommentVNode","_hoisted_8","onClick","_cache","args","$options","updatePost","deletePost"],"sources":["C:\\Users\\Marlene\\AH\\frontend\\src\\components\\OnePost.vue"],"sourcesContent":["<template>\r\n    <div class = \"postComp\">\r\n        <div class = \"post\" v-for = \"post in sortedPosts\" :key=\"id\">\r\n            <h2 v-if = \"post.isPinned\" class=\"pinned\">PINNED:</h2>\r\n            <div class = \"postHeader\">\r\n                <p class=\"date\">{{ post.transformedDate }}</p>\r\n            </div>\r\n            <div class=\"postContent\">\r\n                <router-link :to=\"{name: 'APost', params: {id: post.id}}\">\r\n                  <h1 class = \"title\">{{ post.title }}</h1>\r\n                </router-link>\r\n                <img class=\"postImage\" :src=post.postImage />\r\n                <p>{{ post.body }}</p>\r\n            </div>\r\n            <!--\r\n            <div class = \"postDislikes\">\r\n                <img class = \"dislikesImg\" v-on:click=\"Increase(post.id)\" src=\"../assets/dislike.png\"/>\r\n                <p class = \"postDislikesP\">{{ post.dislikes }}</p>\r\n            </div>\r\n        -->\r\n        </div>\r\n        </div>\r\n\r\n    <div class=\"nupud\">\r\n        <button @click=\"updatePost\" class=\"updatePost\">Update Post</button>\r\n        <button @click=\"deletePost\" class=\"deletePost\">Delete Post</button>\r\n    </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\n    export default {\r\n        name: \"Post\",\r\n        data() {\r\n            return {\r\n                post: {\r\n                id: \"\",\r\n                title: \"\",\r\n                body: \"\",\r\n                date: \"\",\r\n            },\r\n            };\r\n        }, \r\n\r\n        methods: {\r\n            ISO8601ToText(ISOdate) {\r\n                var chunks = ISOdate.split('-');\r\n                var months = [\r\n                    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\r\n                ];\r\n                return months[parseInt(chunks[1]) - 1] + \" \" + chunks[2] + \", \" + chunks[0];\r\n            },\r\n            fetchAPost(id) {\r\n            // fetch one post with the specied id (id)\r\n                fetch(`http://localhost:3000/api/posts/${id}`)\r\n                    .then((response) => response.json())\r\n                    .then((data) => (this.post = data))\r\n                    .catch((err) => console.log(err.message));\r\n            },\r\n            updatePost() {\r\n            // using Fetch - put method - updates a specific post based on the passed id and the specified body\r\n                fetch(`http://localhost:3000/api/posts/${this.post.id}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify(this.post),\r\n            })\r\n                .then((response) => {\r\n                console.log(response.data);\r\n                //this.$router.push(\"/apost/\" + this.post.id);\r\n                // We are using the router instance of this element to navigate to a different URL location\r\n                this.$router.push(\"/\");\r\n                })\r\n                .catch((e) => {\r\n                console.log(e);\r\n                });\r\n            },\r\n            deletePost() {\r\n            // using Fetch - delete method - delets a specific post based on the passed id\r\n                fetch(`http://localhost:3000/api/posts/${this.post.id}`, {\r\n                    method: \"DELETE\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                })\r\n                    .then((response) => {\r\n                    console.log(response.data);\r\n                    // We are using the router instance of this element to navigate to a different URL location\r\n                    this.$router.push(\"/\");\r\n                    })\r\n                    .catch((e) => {\r\n                    console.log(e);\r\n                    });\r\n            },\r\n        },\r\n        mounted() {\r\n            // call fetchAPost() when this element mounts, and pass to it a route parameter  (id)\r\n            // Route parameters (this.$route.params.id) are named URL segments that are used to capture the values specified at their \r\n            // position in the URL. The captured values are populated in the req.params object, with the name \r\n            // of the route parameter specified in the path as their respective keys\r\n            this.fetchAPost(this.$route.params.id);\r\n        },\r\n        };\r\n</script>\r\n\r\n\r\n<style>\r\n.post {\r\n    margin: 15px auto;\r\n    border-style: dotted;\r\n    border-color: hotpink;\r\n    border-radius: 15px;\r\n    padding: 20px;\r\n}\r\n\r\n.postHeader {\r\n    width: 95%;\r\n    margin: auto;\r\n    padding: 1%;\r\n    display: flex;\r\n    flex-direction: row;\r\n}\r\n.postContent {\r\n    border-radius: 15px;\r\n    background-color: rgb(245, 189, 240);\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.postDislikes{\r\n    display: flex;\r\n    flex-direction: row;\r\n    text-align: left;\r\n    padding: 1%;\r\n}\r\n.title {\r\n    padding-right: 8px;\r\n    font-size: 20px;\r\n}\r\n\r\n.post h1::first-letter {\r\n    font-size: 25px;\r\n    color: rgb(174, 47, 111);\r\n}\r\n\r\n.userIcon {\r\n    float: left;\r\n    height: 50px;\r\n    width: 50px;\r\n    margin: 5px 5px 5px 0;\r\n    padding-right: 2%;   \r\n}\r\n\r\n.userName{\r\n    margin-top: auto;\r\n    margin-bottom: auto;\r\n}\r\n\r\n.postImage {\r\n    align-self: center;\r\n    max-width: 60%;\r\n    object-fit: contain;\r\n    margin: 5px 5px 5px 0;\r\n    padding-right: 2%;   \r\n}\r\n\r\n.pinned {\r\n    float: left;\r\n    color: rgb(174, 47, 111);\r\n}\r\n\r\n.date {\r\n    margin-left: auto;\r\n    padding-left: 4px;\r\n    border-left: 2px solid black;\r\n}\r\n\r\n.dislikesImg{\r\n    height:10%;\r\n    width: 10%;\r\n    display: inline;\r\n}\r\n\r\n.dislikesImg:hover{\r\n    cursor: pointer;\r\n    opacity: 70%;\r\n}\r\n.postDislikesP{\r\n    margin-top: auto;\r\n    margin-bottom: auto;\r\n    display: inline;\r\n}\r\n\r\nbutton {\r\n    width: 10vw;\r\n}\r\n</style>"],"mappings":";;EACSA,KAAK,EAAG;AAAU;;;EAEYA,KAAK,EAAC;;;EAC5BA,KAAK,EAAG;AAAY;;EAClBA,KAAK,EAAC;AAAM;;EAEdA,KAAK,EAAC;AAAa;;EAEdA,KAAK,EAAG;AAAO;;;EAc5BA,KAAK,EAAC;AAAO;;;6DAtBlBC,mBAAA,CAoBU,OApBVC,UAoBU,I,kBAnBNC,mBAAA,CAkBMC,SAAA,QAAAC,WAAA,CAlB+BC,IAAA,CAAAC,WAAW,EAAnBC,IAAI;yBAAjCL,mBAAA,CAkBM;MAlBDH,KAAK,EAAG,MAAM;MAAgCS,GAAG,EAAEH,IAAA,CAAAI;QACxCF,IAAI,CAACG,QAAQ,I,cAAzBR,mBAAA,CAAsD,MAAtDS,UAAsD,EAAZ,SAAO,K,mCACjDX,mBAAA,CAEM,OAFNY,UAEM,GADFZ,mBAAA,CAA8C,KAA9Ca,UAA8C,EAAAC,gBAAA,CAA3BP,IAAI,CAACQ,eAAe,iB,GAE3Cf,mBAAA,CAMM,OANNgB,UAMM,GALFC,YAAA,CAEcC,sBAAA;MAFAC,EAAE;QAAAC,IAAA;QAAAC,MAAA;UAAAZ,EAAA,EAA+BF,IAAI,CAACE;QAAE;MAAA;;wBACpD,MAAyC,CAAzCT,mBAAA,CAAyC,MAAzCsB,UAAyC,EAAAR,gBAAA,CAAlBP,IAAI,CAACgB,KAAK,iB;;iDAEnCvB,mBAAA,CAA6C;MAAxCD,KAAK,EAAC,WAAW;MAAEyB,GAAG,EAACjB,IAAI,CAACkB;yCACjCzB,mBAAA,CAAsB,WAAAc,gBAAA,CAAhBP,IAAI,CAACmB,IAAI,iB,GAEnBC,mBAAA,6QAKD,C;oCAIP3B,mBAAA,CAGM,OAHN4B,UAGM,GAFF5B,mBAAA,CAAmE;IAA1D6B,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAAEhC,KAAK,EAAC;KAAa,aAAW,GAC1DC,mBAAA,CAAmE;IAA1D6B,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAE,UAAA,IAAAF,QAAA,CAAAE,UAAA,IAAAH,IAAA,CAAU;IAAEhC,KAAK,EAAC;KAAa,aAAW,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}