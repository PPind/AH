{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nimport _imports_0 from '../assets/dislike.png';\nconst _hoisted_1 = {\n  class: \"postComp\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"pinned\"\n};\nconst _hoisted_3 = {\n  class: \"postHeader\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"userName\"\n};\nconst _hoisted_6 = {\n  class: \"date\"\n};\nconst _hoisted_7 = {\n  class: \"postContent\"\n};\nconst _hoisted_8 = {\n  class: \"title\"\n};\nconst _hoisted_9 = [\"src\"];\nconst _hoisted_10 = {\n  class: \"postDislikes\"\n};\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = {\n  class: \"postDislikesP\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedPosts, post => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"post\",\n      key: _ctx.id\n    }, [post.isPinned ? (_openBlock(), _createElementBlock(\"h2\", _hoisted_2, \"PINNED:\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n      class: \"userIcon\",\n      src: post.userIcon\n    }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"p\", _hoisted_5, _toDisplayString(post.user), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_6, _toDisplayString(post.transformedDate), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_router_link, {\n      to: {\n        name: 'APost',\n        params: {\n          id: post.id\n        }\n      }\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"h1\", _hoisted_8, _toDisplayString(post.title), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), _createElementVNode(\"img\", {\n      class: \"postImage\",\n      src: post.postImage\n    }, null, 8 /* PROPS */, _hoisted_9), _createElementVNode(\"p\", null, _toDisplayString(post.text), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"img\", {\n      class: \"dislikesImg\",\n      onClick: $event => $options.Increase(post.id),\n      src: _imports_0\n    }, null, 8 /* PROPS */, _hoisted_11), _createElementVNode(\"p\", _hoisted_12, _toDisplayString(post.dislikes), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$options","sortedPosts","post","key","_ctx","id","isPinned","_hoisted_2","_createElementVNode","_hoisted_3","src","userIcon","_hoisted_5","_toDisplayString","user","_hoisted_6","transformedDate","_hoisted_7","_createVNode","_component_router_link","to","name","params","_hoisted_8","title","postImage","text","_hoisted_10","onClick","$event","Increase","_hoisted_12","dislikes"],"sources":["C:\\Users\\ppind\\Documents\\3 semester\\AH\\frontend\\src\\components\\Post.vue"],"sourcesContent":["<template>\r\n    <div class = \"postComp\">\r\n        <div class = \"post\" v-for = \"post in sortedPosts\" :key=\"id\">\r\n            <h2 v-if = \"post.isPinned\" class=\"pinned\">PINNED:</h2>\r\n            <div class = \"postHeader\">\r\n                <img class = \"userIcon\" :src = \"post.userIcon\"/>\r\n                <p class = \"userName\">{{ post.user }}</p>\r\n                <p class=\"date\">{{ post.transformedDate }}</p>\r\n            </div>\r\n            <div class=\"postContent\">\r\n                <router-link :to=\"{name: 'APost', params: {id: post.id}}\">\r\n                  <h1 class = \"title\">{{ post.title }}</h1>\r\n                </router-link>\r\n                <img class=\"postImage\" :src=post.postImage />\r\n                <p>{{ post.text }}</p>\r\n            </div>\r\n            \r\n            <div class = \"postDislikes\">\r\n                <img class = \"dislikesImg\" v-on:click=\"Increase(post.id)\" src=\"../assets/dislike.png\"/>\r\n                <p class = \"postDislikesP\">{{ post.dislikes }}</p>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\nname: \"Post\",\r\ncomputed: {\r\n    postList(){\r\n        return this.$store.state.postList.map(post => {\r\n            return {\r\n                ...post,\r\n                transformedDate : this.ISO8601ToText(post.date)\r\n            }\r\n        })\r\n    },\r\n    sortedPosts() {\r\n    // Sort posts by pinned status (pinned first) and then by date\r\n    return this.postList.slice().sort((a, b) => {\r\n      if (a.isPinned !== b.isPinned) {\r\n        return b.isPinned - a.isPinned; // Pinned posts come first\r\n      }\r\n      // Convert ISO 8601 dates to Date objects for comparison\r\n      const dateA = new Date(a.date);\r\n      const dateB = new Date(b.date);\r\n      return dateB - dateA; // Sort by date if not pinned\r\n    });\r\n  },\r\n    hasPinnedPost() {\r\n        return this.postList && this.postList.length > 0 && this.postList.some(post => post.isPinned);\r\n    },\r\n    pinnedPost() {\r\n        return this.postList && this.postList.find(post => post.isPinned);\r\n    },\r\n    nonPinnedPosts() {\r\n        return this.postList ? this.postList.filter(post => !post.isPinned) : [];\r\n    }\r\n},\r\nmethods: {\r\n    ISO8601ToText(ISOdate) {\r\n      var chunks = ISOdate.split('-');\r\n      var months = [\r\n        'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\r\n      ];\r\n      return months[parseInt(chunks[1]) - 1] + \" \" + chunks[2] + \", \" + chunks[0];\r\n    },\r\n    Increase(postID) {\r\n        this.$store.dispatch(\"IncreaseDislikeAct\", postID)\r\n    },\r\n    }\r\n\r\n};\r\n</script>\r\n\r\n<style>\r\n.post {\r\n    margin: 15px auto;\r\n    border-style: dotted;\r\n    border-color: hotpink;\r\n    border-radius: 15px;\r\n    padding: 20px;\r\n}\r\n\r\n.postHeader {\r\n    width: 95%;\r\n    margin: auto;\r\n    padding: 1%;\r\n    display: flex;\r\n    flex-direction: row;\r\n}\r\n.postContent {\r\n    border-radius: 15px;\r\n    background-color: rgb(245, 189, 240);\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.postDislikes{\r\n    display: flex;\r\n    flex-direction: row;\r\n    text-align: left;\r\n    padding: 1%;\r\n}\r\n.title {\r\n    padding-right: 8px;\r\n    font-size: 20px;\r\n}\r\n\r\n.post h1::first-letter {\r\n    font-size: 25px;\r\n    color: rgb(174, 47, 111);\r\n}\r\n\r\n.userIcon {\r\n    float: left;\r\n    height: 50px;\r\n    width: 50px;\r\n    margin: 5px 5px 5px 0;\r\n    padding-right: 2%;   \r\n}\r\n\r\n.userName{\r\n    margin-top: auto;\r\n    margin-bottom: auto;\r\n}\r\n\r\n.postImage {\r\n    align-self: center;\r\n    max-width: 60%;\r\n    object-fit: contain;\r\n    margin: 5px 5px 5px 0;\r\n    padding-right: 2%;   \r\n}\r\n\r\n.pinned {\r\n    float: left;\r\n    color: rgb(174, 47, 111);\r\n}\r\n\r\n.date {\r\n    margin-left: auto;\r\n    padding-left: 4px;\r\n    border-left: 2px solid black;\r\n}\r\n\r\n.dislikesImg{\r\n    height:10%;\r\n    width: 10%;\r\n    display: inline;\r\n}\r\n\r\n.dislikesImg:hover{\r\n    cursor: pointer;\r\n    opacity: 70%;\r\n}\r\n.postDislikesP{\r\n    margin-top: auto;\r\n    margin-bottom: auto;\r\n    display: inline;\r\n}\r\n</style>"],"mappings":";OAkB0EA,UAA2B;;EAjB5FC,KAAK,EAAG;AAAU;;;EAEYA,KAAK,EAAC;;;EAC5BA,KAAK,EAAG;AAAY;;;EAElBA,KAAK,EAAG;AAAU;;EAClBA,KAAK,EAAC;AAAM;;EAEdA,KAAK,EAAC;AAAa;;EAEdA,KAAK,EAAG;AAAO;;;EAMpBA,KAAK,EAAG;AAAc;;;EAEpBA,KAAK,EAAG;AAAe;;;uBAlBtCC,mBAAA,CAuBM,OAvBNC,UAuBM,I,kBAtBFD,mBAAA,CAmBME,SAAA,QAAAC,WAAA,CAnB+BC,QAAA,CAAAC,WAAW,EAAnBC,IAAI;yBAAjCN,mBAAA,CAmBM;MAnBDD,KAAK,EAAG,MAAM;MAAgCQ,GAAG,EAAEC,IAAA,CAAAC;QACxCH,IAAI,CAACI,QAAQ,I,cAAzBV,mBAAA,CAAsD,MAAtDW,UAAsD,EAAZ,SAAO,K,mCACjDC,mBAAA,CAIM,OAJNC,UAIM,GAHFD,mBAAA,CAAgD;MAA3Cb,KAAK,EAAG,UAAU;MAAEe,GAAG,EAAIR,IAAI,CAACS;yCACrCH,mBAAA,CAAyC,KAAzCI,UAAyC,EAAAC,gBAAA,CAAhBX,IAAI,CAACY,IAAI,kBAClCN,mBAAA,CAA8C,KAA9CO,UAA8C,EAAAF,gBAAA,CAA3BX,IAAI,CAACc,eAAe,iB,GAE3CR,mBAAA,CAMM,OANNS,UAMM,GALFC,YAAA,CAEcC,sBAAA;MAFAC,EAAE;QAAAC,IAAA;QAAAC,MAAA;UAAAjB,EAAA,EAA+BH,IAAI,CAACG;QAAE;MAAA;;wBACpD,MAAyC,CAAzCG,mBAAA,CAAyC,MAAzCe,UAAyC,EAAAV,gBAAA,CAAlBX,IAAI,CAACsB,KAAK,iB;;iDAEnChB,mBAAA,CAA6C;MAAxCb,KAAK,EAAC,WAAW;MAAEe,GAAG,EAACR,IAAI,CAACuB;yCACjCjB,mBAAA,CAAsB,WAAAK,gBAAA,CAAhBX,IAAI,CAACwB,IAAI,iB,GAGnBlB,mBAAA,CAGM,OAHNmB,WAGM,GAFFnB,mBAAA,CAAuF;MAAlFb,KAAK,EAAG,aAAa;MAAMiC,OAAK,EAAAC,MAAA,IAAE7B,QAAA,CAAA8B,QAAQ,CAAC5B,IAAI,CAACG,EAAE;MAAGK,GAA2B,EAA3BhB;0CAC1Dc,mBAAA,CAAkD,KAAlDuB,WAAkD,EAAAlB,gBAAA,CAApBX,IAAI,CAAC8B,QAAQ,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}