{"ast":null,"code":"import HeaderXD from '@/components/Header.vue';\nimport FooterXD from '@/components/Footer.vue';\nexport default {\n  name: \"SignupView\",\n  components: {\n    HeaderXD,\n    FooterXD\n  },\n  data: function () {\n    return {\n      email: '',\n      password: '',\n      validatePassword: '',\n      validated: false,\n      errors: []\n    };\n  },\n  methods: {\n    /* Validate password */\n    validateForm() {\n      const errors = [];\n      const length = this.password.length >= 8 && this.password.length < 15;\n      const upper = /[A-Z]/.test(this.password);\n      const lowers = /[a-z].*[a-z]/.test(this.password);\n      const numer = /[0-9]/.test(this.password);\n      const startsUpper = /^[A-Z]/.test(this.password);\n      const underscore = /_/.test(this.password);\n      if (!length) {\n        errors.push(\"Password must be between 8 and 15 characters !!!\");\n      }\n      if (!upper) {\n        errors.push(\"Password must include at least one uppercase character !!! \");\n      }\n      if (!lowers) {\n        errors.push(\"Password must include  at least two lowercase characters !!! \");\n      }\n      if (!numer) {\n        errors.push(\"Password must include at least one numeric value !!! \");\n      }\n      if (!startsUpper) {\n        errors.push(\"Password must start with an uppercase character !!! \");\n      }\n      if (!underscore) {\n        errors.push('Password must contain at least one underscore \"_\" !!! ');\n      }\n      if (errors == []) {\n        this.password = \"\", this.email = \"\", this.validated = true;\n      } else {\n        this.errors = errors;\n        this.validatePassword = \"Your password is not valid !!\";\n      }\n    },\n    submitForm() {\n      this.validateForm();\n      if (this.errors.length === 0) {\n        this.validatePassword = \"Yippee !! New account successfully made !\", this.password = \"\", this.email = \"\", this.validated = true;\n      }\n    },\n    SignUp() {\n      this.validateForm();\n      if (this.validated) {}\n      var data = {\n        email: this.email,\n        password: this.password\n      };\n      // using Fetch - post method - send an HTTP post request to the specified URI with the defined body\n      fetch(\"http://localhost:3000/auth/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: 'include',\n        //  Don't forget to specify this if you need cookies\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        this.$router.push(\"/\");\n        //location.assign(\"/\");\n      }).catch(e => {\n        console.log(e);\n        console.log(\"error\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["HeaderXD","FooterXD","name","components","data","email","password","validatePassword","validated","errors","methods","validateForm","length","upper","test","lowers","numer","startsUpper","underscore","push","submitForm","SignUp","fetch","method","headers","credentials","body","JSON","stringify","then","response","json","console","log","$router","catch","e"],"sources":["C:\\Users\\ppind\\Documents\\3 semester\\AH\\frontend\\src\\views\\SignupView.vue"],"sourcesContent":["<template>\r\n  <header-x-d></header-x-d>\r\n  <div class=\"signup\">\r\n    <div class=\"main\">\r\n        <div class=\"tekst\">\r\n            <h1 id = \"hId\">Welcome to cool site ! :3</h1>\r\n            \r\n            <h1>Create a new account:</h1>\r\n              <label for=\"email\">E-mail:</label>\r\n              <input type=\"email\" required v-model =\"email\" placeholder=\"E-mail\"><br><br>\r\n              <label for=\"parool\" >Password:</label>\r\n              <input type=\"password\" required v-model = \"password\" placeholder=\"Password\"><br><br>  \r\n              <div v-if=\"validatePassword\">\r\n                {{validatePassword}}\r\n                  <ul>\r\n                    <li v-for=\"error in errors\" :key=\"error\">{{ error }}</li>\r\n                  </ul>\r\n              </div>\r\n              <button @click=\"SignUp\" class=\"SignUp\">SignUp</button>\r\n        </div>\r\n    </div>\r\n  </div>\r\n  <footer-x-d></footer-x-d>\r\n</template>\r\n\r\n<script>\r\nimport HeaderXD from '@/components/Header.vue'\r\nimport FooterXD from '@/components/Footer.vue'\r\n\r\nexport default {\r\nname: \"SignupView\", \r\ncomponents: {HeaderXD, FooterXD},\r\ndata: function() {\r\n    return {\r\n      email:'',\r\n      password: '',\r\n      validatePassword:'',\r\n      validated:false,\r\n      errors:[],\r\n  }},\r\n  methods: {\r\n   /* Validate password */\r\n    validateForm(){\r\n    \r\n    const errors = []\r\n    const length = this.password.length>= 8 && this.password.length< 15\r\n    const upper = /[A-Z]/.test(this.password)\r\n    const lowers = /[a-z].*[a-z]/.test(this.password)\r\n    const numer = /[0-9]/.test(this.password)\r\n    const startsUpper = /^[A-Z]/.test(this.password)\r\n    const underscore = /_/.test(this.password)\r\n    \r\n    if (!length){\r\n      errors.push( \"Password must be between 8 and 15 characters !!!\")\r\n    }\r\n    if(!upper){\r\n      errors.push(\"Password must include at least one uppercase character !!! \")\r\n    }\r\n    if(!lowers){\r\n      errors.push(\"Password must include  at least two lowercase characters !!! \")\r\n    }\r\n    if(!numer){\r\n      errors.push(\"Password must include at least one numeric value !!! \")\r\n    }\r\n    if(!startsUpper){\r\n      errors.push(\"Password must start with an uppercase character !!! \")\r\n    }\r\n    if(!underscore){\r\n      errors.push('Password must contain at least one underscore \"_\" !!! ')\r\n    }\r\n\r\n    if (errors == []){\r\n      this.password = \"\",\r\n      this.email = \"\",\r\n      this.validated = true\r\n    }else{\r\n      this.errors = errors\r\n      this.validatePassword = \"Your password is not valid !!\"   \r\n    }\r\n\r\n  },\r\n  submitForm(){\r\n    this.validateForm()\r\n    if (this.errors.length ===0){\r\n      this.validatePassword =\"Yippee !! New account successfully made !\",\r\n      this.password = \"\",\r\n      this.email = \"\",\r\n      this.validated = true\r\n    }\r\n  },\r\n  SignUp() {\r\n    this.validateForm();\r\n    if(this.validated){}\r\n      var data = {\r\n        email: this.email,\r\n        password: this.password\r\n      };\r\n      // using Fetch - post method - send an HTTP post request to the specified URI with the defined body\r\n      fetch(\"http://localhost:3000/auth/signup\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n          credentials: 'include', //  Don't forget to specify this if you need cookies\r\n          body: JSON.stringify(data),\r\n      })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n      console.log(data);\r\n      this.$router.push(\"/\");\r\n      //location.assign(\"/\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        console.log(\"error\");\r\n      });\r\n    }\r\n    },\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.signup {\r\n  height: 70vh;\r\n}\r\n.tekst{\r\n    text-align: center;\r\n    font-size: 110%;\r\n    padding-top: 2%;\r\n    padding-bottom: 4%;\r\n}\r\n\r\n#hId{\r\n    \r\n    color: rgb(184, 10, 103);\r\n}\r\n\r\nh1{\r\n    font-size: 180%;\r\n}\r\n\r\nform{\r\n    padding-bottom: 4%;\r\n}\r\n\r\nul{\r\n  list-style-type: none;\r\n  margin: 1%;\r\n  padding: 0;\r\n  font-size: 85%;\r\n  color: rgb(154, 9, 45);\r\n}\r\n\r\n.submit{\r\n  padding-top:1%;\r\n}\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}